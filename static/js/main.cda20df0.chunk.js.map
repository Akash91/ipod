{"version":3,"sources":["images/games.png","images/settings.png","images/cover.png","images/music.png","utils/util.js","components/Menu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","trackDragEvent","_this","window","interval","setInterval","undefined","_e","currValue","detail","data","distanceFromOrigin","currDir","directionFromOrigin","prevValue","prevDir","rotateEle","menuArray","pop","unshift","console","log","setState","highlighted","shift","push","Menu","props","_this2","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showL1Menu","showBaseCover","showMusicCover","showGamesCover","showSettingsCover","handleBack","bind","assertThisInitialized","handleSelect","myRegion","ZingTouch","Region","document","body","myElement","getElementById","e","addEventListener","clearInterval","handleOnSelection","type","_this$state","react_default","a","createElement","className","class","src","cover","music","games","settings","id","onTouchStart","onClick","Component","App","components_Menu","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6VCA3BC,EAAiB,SAACC,GAC3BC,OAAOC,SAAWC,YAAY,WAC1B,QAAiBC,IAAdH,OAAOI,GAAkB,CACxB,IAAIC,EAAYL,OAAOI,GAAGE,OAAOC,KAAK,GAAGC,mBACrCC,EAAUT,OAAOI,GAAGE,OAAOC,KAAK,GAAGG,oBACvC,GAAGL,EAAUL,OAAOW,UAAY,GAAI,CAChC,GAAGF,EAAQT,OAAOY,QAAU,GAAI,CAC5B,IAAIC,EAAYb,OAAOc,UAAUC,MACjCf,OAAOc,UAAUE,QAAQH,GACzBI,QAAQC,IAAI,OAAQlB,OAAOc,WAC3Bf,EAAMoB,SAAS,CAACC,YAAapB,OAAOc,UAAU,KAElD,GAAGL,EAAQT,OAAOY,SAAW,GAAI,CAC7B,IAAIC,EAAYb,OAAOc,UAAUO,QACjCrB,OAAOc,UAAUQ,KAAKT,GACtBI,QAAQC,IAAI,QAASlB,OAAOc,WAC5Bf,EAAMoB,SAAS,CAACC,YAAapB,OAAOc,UAAU,MAGtDd,OAAOW,UAAYN,EACnBL,OAAOY,QAAUH,IAEtB,MCyHQc,cApIX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,QAEKI,MAAQ,CACTZ,YAAa,GACba,YAAY,EACZC,eAAe,EACfC,gBAAgB,EAChBC,gBAAgB,EAChBC,mBAAmB,GAGvBZ,EAAKa,WAAab,EAAKa,WAAWC,KAAhBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAClBA,EAAKgB,aAAehB,EAAKgB,aAAaF,KAAlBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAbLA,mFAiBf,IAAIiB,EAAW,IAAIC,IAAUC,OAAOC,SAASC,MACzCC,EAAYF,SAASG,eAAe,UACpCjD,EAAQ6B,KACZ5B,OAAOc,UAAY,CAAC,QAAS,QAAS,QAAS,YAE/C4B,EAASH,KAAKQ,EAAW,MAAO,SAASE,GACrCjD,OAAOI,GAAK6C,IAGhBJ,SAASK,iBAAiB,YAAa,SAASD,GAC5CnD,EAAeC,KAEnB8C,SAASK,iBAAiB,aAAc,SAASD,GAC7CnD,EAAeC,KAEnB8C,SAASK,iBAAiB,UAAW,SAASD,GAC1CE,cAAcnD,OAAOC,YAEzB4C,SAASK,iBAAiB,WAAY,SAASD,GAC3CE,cAAcnD,OAAOC,mDAId,IACJmB,EAAeQ,KAAKI,MAApBZ,YACPQ,KAAKwB,kBAAkBhC,wCAIvBQ,KAAKT,SAAS,CACVc,YAAY,EACZC,eAAe,EACfC,gBAAgB,EAChBC,gBAAgB,EAChBC,mBAAmB,8CAITgB,GAQd,OAPAzB,KAAKT,SAAS,CACVc,YAAY,EACZC,eAAe,EACfC,gBAAgB,EAChBC,gBAAgB,EAChBC,mBAAmB,IAEhBgB,GACH,IAAK,QACDzB,KAAKT,SAAS,CAACe,eAAe,IAClC,MACA,IAAK,QACDN,KAAKT,SAAS,CAACgB,gBAAgB,IACnC,MACA,IAAK,QACDP,KAAKT,SAAS,CAACiB,gBAAgB,IACnC,MACA,IAAK,WACDR,KAAKT,SAAS,CAACkB,mBAAmB,sCAMrC,IAAAiB,EAC+F1B,KAAKI,MAAlGC,EADFqB,EACErB,WAAYC,EADdoB,EACcpB,cAAeC,EAD7BmB,EAC6BnB,eAAgBC,EAD7CkB,EAC6ClB,eAAgBC,EAD7DiB,EAC6DjB,kBAAmBjB,EADhFkC,EACgFlC,YACrF,OACImC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKE,MAAM,WAEH1B,GAAcsB,EAAAC,EAAAC,cAAA,kBAGdxB,GACAsB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAA2B,UAAhBtC,EAA0B,YAAc,IAAvD,SACAmC,EAAAC,EAAAC,cAAA,MAAIC,UAA2B,UAAhBtC,EAA0B,YAAc,IAAvD,SACAmC,EAAAC,EAAAC,cAAA,MAAIC,UAA2B,UAAhBtC,EAA0B,YAAc,IAAvD,SACAmC,EAAAC,EAAAC,cAAA,MAAIC,UAA2B,aAAhBtC,EAA6B,YAAc,IAA1D,aAIJc,GACAqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKG,IAAKC,OAId1B,GACAoB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKG,IAAKE,OAId1B,GACAmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKG,IAAKG,OAId1B,GACAkB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKG,IAAKI,QAItBT,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,SAASP,UAAU,gBACvBH,EAAAC,EAAAC,cAAA,KAAGS,aAActC,KAAKU,WAAY6B,QAASvC,KAAKU,aAChDiB,EAAAC,EAAAC,cAAA,QAAMS,aAActC,KAAKa,aAAc0B,QAASvC,KAAKa,wBA7HtD2B,aCIJC,mLARX,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACa,EAAD,cAJUF,aCQEG,QACW,cAA7BvE,OAAOwE,SAASC,UAEe,UAA7BzE,OAAOwE,SAASC,UAEhBzE,OAAOwE,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrB,EAAAC,EAAAC,cAACoB,EAAD,MAAShC,SAASG,eAAe,SD2H3C,kBAAmB8B,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.cda20df0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/games.6c29fb46.png\";","module.exports = __webpack_public_path__ + \"static/media/settings.a3d9f9e7.png\";","module.exports = __webpack_public_path__ + \"static/media/cover.89583f2d.png\";","module.exports = __webpack_public_path__ + \"static/media/music.b1de0421.png\";","export const trackDragEvent = (_this) =>  {\n    window.interval = setInterval(function() {\n        if(window._e !== undefined) {\n            let currValue = window._e.detail.data[0].distanceFromOrigin;\n            let currDir = window._e.detail.data[0].directionFromOrigin;\n            if(currValue-window.prevValue > 10) {\n                if(currDir-window.prevDir > 10) {\n                    let rotateEle = window.menuArray.pop();\n                    window.menuArray.unshift(rotateEle);\n                    console.log('left', window.menuArray);\n                    _this.setState({highlighted: window.menuArray[0]});\n                }\n                if(currDir-window.prevDir < -10) {\n                    let rotateEle = window.menuArray.shift();\n                    window.menuArray.push(rotateEle);\n                    console.log('right', window.menuArray);\n                    _this.setState({highlighted: window.menuArray[0]});\n                }\n            }\n            window.prevValue = currValue;\n            window.prevDir = currDir;\n        }\n    }, 200)\n};","import React, { Component } from 'react';\nimport ZingTouch from 'zingtouch';\nimport '../css/main.css'\nimport games from \"../images/games.png\";\nimport settings from \"../images/settings.png\";\nimport cover from \"../images/cover.png\";\nimport music from \"../images/music.png\";\nimport {trackDragEvent} from \"../utils/util\";\n\n\nclass Menu extends Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n            highlighted: \"\",\n            showL1Menu: true,\n            showBaseCover: false,\n            showMusicCover: false,\n            showGamesCover: false,\n            showSettingsCover: false\n        }\n        \n        this.handleBack = this.handleBack.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n    }\n\n    componentDidMount() {\n        let myRegion = new ZingTouch.Region(document.body);\n        let myElement = document.getElementById('region');\n        let _this = this;\n        window.menuArray = [\"Cover\", \"Music\", \"Games\", \"Settings\"];\n\n        myRegion.bind(myElement, 'pan', function(e) {\n            window._e = e;\n        });\n\n        document.addEventListener('mousedown', function(e) {\n            trackDragEvent(_this);\n        });\n        document.addEventListener('touchstart', function(e) {\n            trackDragEvent(_this);\n        });\n        document.addEventListener('mouseup', function(e) {\n            clearInterval(window.interval);\n        });\n        document.addEventListener('touchend', function(e) {\n            clearInterval(window.interval);\n        });\n    }\n\n    handleSelect() {\n        const {highlighted} = this.state;\n        this.handleOnSelection(highlighted);\n    }\n\n    handleBack() {\n        this.setState({\n            showL1Menu: true,\n            showBaseCover: false,\n            showMusicCover: false,\n            showGamesCover: false,\n            showSettingsCover: false,\n        });\n    }\n\n    handleOnSelection(type) {\n        this.setState({\n            showL1Menu: false,\n            showBaseCover: false,\n            showMusicCover: false,\n            showGamesCover: false,\n            showSettingsCover: false\n        });\n        switch(type) {\n            case 'Cover': \n                this.setState({showBaseCover: true,});\n            break;\n            case 'Music': \n                this.setState({showMusicCover: true,});\n            break;\n            case 'Games': \n                this.setState({showGamesCover: true,});\n            break;\n            case 'Settings': \n                this.setState({showSettingsCover: true,});\n            break;\n            default: break;\n        }\n    }\n\n    render() {\n        const {showL1Menu, showBaseCover, showMusicCover, showGamesCover, showSettingsCover, highlighted} = this.state;\n        return (\n            <div className=\"menu\">\n                <div class=\"ipod-bg\">\n                    {\n                        showL1Menu && <h3>Ipod</h3>\n                    }\n                    {\n                        showL1Menu &&\n                        <ul>\n                            <li className={highlighted === \"Cover\" ? \"highlight\" : \"\"} >Cover</li>\n                            <li className={highlighted === \"Music\" ? \"highlight\" : \"\"} >Music</li>\n                            <li className={highlighted === \"Games\" ? \"highlight\" : \"\"} >Games</li>\n                            <li className={highlighted === \"Settings\" ? \"highlight\" : \"\"} >Settings</li>\n                        </ul>\n                    }\n                    {\n                        showBaseCover &&\n                        <div className=\"img-cover\">\n                            <img src={cover} />\n                        </div>\n                    }\n                    {\n                        showMusicCover &&\n                        <div className=\"img-cover\">\n                            <img src={music} />\n                        </div>\n                    }\n                    {\n                        showGamesCover &&\n                        <div className=\"img-cover\">\n                            <img src={games} />\n                        </div>\n                    }\n                    {\n                        showSettingsCover &&\n                        <div className=\"img-cover\">\n                            <img src={settings} />\n                        </div>\n                    }\n                </div>\n                <div id=\"region\" className=\"touch-region\">\n                    <i onTouchStart={this.handleBack} onClick={this.handleBack}></i>\n                    <span onTouchStart={this.handleSelect} onClick={this.handleSelect}>\n                    </span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Menu;","import React, { Component } from 'react';\nimport './App.css';\nimport Menu from './components/Menu';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Menu/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}